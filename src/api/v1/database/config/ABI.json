[
  {
    "type": "impl",
    "name": "CoitonImpl",
    "interface_name": "coiton::mods::interfaces::icoiton::ICoiton"
  },
  {
    "type": "enum",
    "name": "coiton::mods::types::UserType",
    "variants": [
      { "name": "Individual", "type": "()" },
      { "name": "Entity", "type": "()" }
    ]
  },
  {
    "type": "struct",
    "name": "core::byte_array::ByteArray",
    "members": [
      {
        "name": "data",
        "type": "core::array::Array::<core::bytes_31::bytes31>"
      },
      { "name": "pending_word", "type": "core::felt252" },
      { "name": "pending_word_len", "type": "core::integer::u32" }
    ]
  },
  {
    "type": "struct",
    "name": "core::integer::u256",
    "members": [
      { "name": "low", "type": "core::integer::u128" },
      { "name": "high", "type": "core::integer::u128" }
    ]
  },
  {
    "type": "enum",
    "name": "core::bool",
    "variants": [
      { "name": "False", "type": "()" },
      { "name": "True", "type": "()" }
    ]
  },
  {
    "type": "struct",
    "name": "coiton::mods::types::User",
    "members": [
      { "name": "id", "type": "core::integer::u256" },
      { "name": "verified", "type": "core::bool" },
      { "name": "details", "type": "core::byte_array::ByteArray" },
      { "name": "user_type", "type": "coiton::mods::types::UserType" },
      {
        "name": "address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      { "name": "registered", "type": "core::bool" }
    ]
  },
  {
    "type": "enum",
    "name": "coiton::mods::types::ListingTag",
    "variants": [
      { "name": "Sold", "type": "()" },
      { "name": "ForSale", "type": "()" }
    ]
  },
  {
    "type": "struct",
    "name": "coiton::mods::types::Listing",
    "members": [
      { "name": "id", "type": "core::integer::u256" },
      { "name": "details", "type": "core::byte_array::ByteArray" },
      {
        "name": "owner",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      { "name": "price", "type": "core::integer::u256" },
      { "name": "tag", "type": "coiton::mods::types::ListingTag" }
    ]
  },
  {
    "type": "enum",
    "name": "core::option::Option::<core::integer::u256>",
    "variants": [
      { "name": "Some", "type": "core::integer::u256" },
      { "name": "None", "type": "()" }
    ]
  },
  {
    "type": "enum",
    "name": "core::option::Option::<coiton::mods::types::User>",
    "variants": [
      { "name": "Some", "type": "coiton::mods::types::User" },
      { "name": "None", "type": "()" }
    ]
  },
  {
    "type": "struct",
    "name": "coiton::mods::types::PurchaseRequest",
    "members": [
      { "name": "listing_id", "type": "core::integer::u256" },
      { "name": "request_id", "type": "core::integer::u256" },
      { "name": "price", "type": "core::integer::u256" },
      {
        "name": "initiator",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "user",
        "type": "core::option::Option::<coiton::mods::types::User>"
      }
    ]
  },
  {
    "type": "interface",
    "name": "coiton::mods::interfaces::icoiton::ICoiton",
    "items": [
      {
        "type": "function",
        "name": "register",
        "inputs": [
          { "name": "user_type", "type": "coiton::mods::types::UserType" },
          { "name": "details", "type": "core::byte_array::ByteArray" }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "verify_user",
        "inputs": [
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_user",
        "inputs": [
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [{ "type": "coiton::mods::types::User" }],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "create_listing",
        "inputs": [
          { "name": "price", "type": "core::integer::u256" },
          { "name": "details", "type": "core::byte_array::ByteArray" }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_all_listings",
        "inputs": [],
        "outputs": [
          { "type": "core::array::Array::<coiton::mods::types::Listing>" }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_listings_by_ids",
        "inputs": [
          {
            "name": "ids",
            "type": "core::array::Array::<core::integer::u256>"
          }
        ],
        "outputs": [
          { "type": "core::array::Array::<coiton::mods::types::Listing>" }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_listing",
        "inputs": [{ "name": "id", "type": "core::integer::u256" }],
        "outputs": [{ "type": "coiton::mods::types::Listing" }],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_user_listings",
        "inputs": [
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          { "type": "core::array::Array::<coiton::mods::types::Listing>" }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "create_purchase_request",
        "inputs": [
          { "name": "listing_id", "type": "core::integer::u256" },
          {
            "name": "bid_price",
            "type": "core::option::Option::<core::integer::u256>"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "approve_purchase_request",
        "inputs": [
          { "name": "listing_id", "type": "core::integer::u256" },
          { "name": "request_id", "type": "core::integer::u256" }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_listings_with_purchase_requests",
        "inputs": [
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          { "type": "core::array::Array::<coiton::mods::types::Listing>" }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_listing_purchase_requests",
        "inputs": [{ "name": "id", "type": "core::integer::u256" }],
        "outputs": [
          {
            "type": "core::array::Array::<coiton::mods::types::PurchaseRequest>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_owner",
        "inputs": [],
        "outputs": [
          { "type": "core::starknet::contract_address::ContractAddress" }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_purchase",
        "inputs": [
          { "name": "listing_id", "type": "core::integer::u256" },
          { "name": "request_id", "type": "core::integer::u256" }
        ],
        "outputs": [{ "type": "coiton::mods::types::PurchaseRequest" }],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "set_erc721",
        "inputs": [
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_erc20",
        "inputs": [
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_erc20",
        "inputs": [],
        "outputs": [
          { "type": "core::starknet::contract_address::ContractAddress" }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_erc721",
        "inputs": [],
        "outputs": [
          { "type": "core::starknet::contract_address::ContractAddress" }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "upgrade",
        "inputs": [
          {
            "name": "impl_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "version",
        "inputs": [],
        "outputs": [{ "type": "core::integer::u16" }],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "withdraw",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "constructor",
    "name": "constructor",
    "inputs": [
      {
        "name": "owner",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "type": "event",
    "name": "coiton::mods::events::Upgrade",
    "kind": "struct",
    "members": [
      {
        "name": "implementation",
        "type": "core::starknet::class_hash::ClassHash",
        "kind": "key"
      }
    ]
  },
  {
    "type": "enum",
    "name": "coiton::mods::events::UserEventType",
    "variants": [
      { "name": "Register", "type": "()" },
      { "name": "Verify", "type": "()" }
    ]
  },
  {
    "type": "event",
    "name": "coiton::mods::events::User",
    "kind": "struct",
    "members": [
      { "name": "id", "type": "core::integer::u256", "kind": "key" },
      {
        "name": "address",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "event_type",
        "type": "coiton::mods::events::UserEventType",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "coiton::mods::events::CreateListing",
    "kind": "struct",
    "members": [
      { "name": "id", "type": "core::integer::u256", "kind": "key" },
      {
        "name": "owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      { "name": "price", "type": "core::integer::u256", "kind": "key" }
    ]
  },
  {
    "type": "enum",
    "name": "coiton::mods::events::PurchaseRequestType",
    "variants": [
      { "name": "Create", "type": "()" },
      { "name": "Approve", "type": "()" }
    ]
  },
  {
    "type": "event",
    "name": "coiton::mods::events::PurchaseRequest",
    "kind": "struct",
    "members": [
      { "name": "listing_id", "type": "core::integer::u256", "kind": "key" },
      { "name": "request_id", "type": "core::integer::u256", "kind": "key" },
      {
        "name": "bid_price",
        "type": "core::option::Option::<core::integer::u256>",
        "kind": "data"
      },
      {
        "name": "initiator",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "request_type",
        "type": "coiton::mods::events::PurchaseRequestType",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "coiton::Coiton::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "Upgrade",
        "type": "coiton::mods::events::Upgrade",
        "kind": "nested"
      },
      {
        "name": "User",
        "type": "coiton::mods::events::User",
        "kind": "nested"
      },
      {
        "name": "CreateListing",
        "type": "coiton::mods::events::CreateListing",
        "kind": "nested"
      },
      {
        "name": "PurchaseRequest",
        "type": "coiton::mods::events::PurchaseRequest",
        "kind": "nested"
      }
    ]
  }
]
